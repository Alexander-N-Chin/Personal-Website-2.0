export const skillProjectData = {
  skills: [
    { id: "java", name: "Java", projectIds: ["e5"] },
    {
      id: "python",
      name: "Python",
      projectIds: ["e1", "e2", "e3", "e4", "p2", "p6", "p7"],
    },
    { id: "mips", name: "MIPS Assembly", projectIds: ["p4"] },
    {
      id: "bash",
      name: "Shell Bash",
      projectIds: ["e1", "e2", "e3", "e4", "p1", "p2", "p3", "p5", "p6", "p7"],
    },
    { id: "go", name: "Go", projectIds: ["e1"] },
    { id: "fortran", name: "Fortran", projectIds: ["e2"] },
    {
      id: "js",
      name: "JavaScript",
      projectIds: ["p1", "p2", "p3", "p5", "p7"],
    },
    { id: "css", name: "CSS", projectIds: ["p1", "p2", "p3", "p5", "p7"] },
    { id: "ts", name: "TypeScript", projectIds: ["p1", "p3", "p5"] },
    { id: "html", name: "HTML", projectIds: ["p1", "p2", "p3", "p5", "p7"] },
    { id: "sql", name: "SQL", projectIds: ["e1", "p2"] },
    { id: "latex", name: "LaTex", projectIds: ["e2", "e3"] },
    {
      id: "react",
      name: "React.js",
      projectIds: ["p1", "p2", "p3", "p5", "p7"],
    },
    { id: "node", name: "Node.js", projectIds: ["p5"] },
    { id: "express", name: "Express.js", projectIds: ["p5"] },
    { id: "flask", name: "Flask", projectIds: ["p2"] },
    { id: "mango", name: "MangoDB", projectIds: ["p5"] },
    { id: "pg", name: "PostgresDB", projectIds: ["e1", "p2"] },
    { id: "velocity", name: "Apache Velocity", projectIds: ["e5"] },
    { id: "jupyter", name: "Jupyter Notebook", projectIds: ["e3", "p6", "p7"] },
    { id: "pandas", name: "Pandas", projectIds: ["e2", "e3", "p6", "p7"] },
    { id: "numpy", name: "NumPy", projectIds: ["e2", "e3", "p6", "p7"] },
    { id: "matplotlib", name: "MatPlotLib", projectIds: ["e2", "e3", "p7"] },
    { id: "sci", name: "Scikit Learn", projectIds: ["e3", "p6", "p7"] },
    { id: "cv", name: "OpenCV", projectIds: ["p6"] },
    { id: "k8s", name: "Kubernetes", projectIds: ["e1"] },
    { id: "argo", name: "ArgoCD", projectIds: ["e1"] },
    { id: "aws", name: "Amazon Web Services", projectIds: ["e1", "p1"] },
    { id: "tf", name: "Terraform", projectIds: ["e1", "p1"] },
    { id: "jenkins", name: "Jenkins", projectIds: ["e1"] },
    {
      id: "docker",
      name: "Docker",
      projectIds: ["e1", "p1", "p2", "p3", "p5", "p7"],
    },
    { id: "aurora", name: "Aurora/Mesos", projectIds: ["e1"] },
    { id: "grafana", name: "Grafana", projectIds: ["e1"] },
    { id: "prom", name: "Prometheus", projectIds: ["e1"] },
    { id: "loki", name: "Loki", projectIds: ["e1"] },
    { id: "figma", name: "Figma", projectIds: ["e3", "p1", "p2", "p5", "p7"] },
    { id: "vsm", name: "VSM", projectIds: ["e2"] },
    { id: "afm", name: "AFM", projectIds: ["e2"] },
    { id: "sputter", name: "Sputtering Machine", projectIds: ["e2"] },
    { id: "mfm", name: "MFM", projectIds: ["e2"] },
    { id: "moke", name: "MOKE", projectIds: ["e2"] },
  ],
  experiences: [
    {
      id: "e1",
      name: "Medallia",
      skillIds: [
        "pg",
        "aws",
        "python",
        "go",
        "k8s",
        "argo",
        "jenkins",
        "aurora",
        "bash",
        "grafana",
        "prom",
        "loki",
        "tf",
        "docker",
        "sql",
      ],
      description:
        "I executed over 200 service deployments and updates, maintaining FEDRAMP-high security protocols in the AWS GovCloud environment. I developed an SSL certificate manager to streamline certificate replacements within the Kubernetes environment and ensured 24/7 service availability through on-call rotations and collaboration with application teams. Additionally, I efficiently migrated services from Aurora/Mesos to Kubernetes, used Grafana and Loki to create monitoring dashboards, and pinpoint error logs across the GovCloud environment. I also designed architecture diagrams to support significant changes to the environment.",
      images: ["/images/medallia.png", "/images/medallia2.webp"],
      date: "Summer 2024 - Present",
      links: ["https://www.medallia.com"],
      title: "Site Reliability Engineer",
    },
    {
      id: "e2",
      name: "Integrated Nano Computing Lab",
      skillIds: [
        "python",
        "fortran",
        "bash",
        "pandas",
        "numpy",
        "matplotlib",
        "vsm",
        "latex",
        "afm",
        "sputter",
        "mfm",
        "moke",
      ],
      description: "I led the growth of skyrmion stacks using a sputtering machine and characterized them with VSM and MFM, while utilizing MOKE imaging to visualize the skyrmions. Additionally, I refined simulations of magnetic tunnel junction-based true random number generators by incorporating both adiabatic and non-adiabatic torques. I also developed and verified a simulation for antiferromagnetic tunnel junction-based true random number generators, showcasing their potential for superfast switching and low-power operation.",
      images: ["/images/INC-Logo.png", "/images/incphoto.jpeg"],
      date: "Fall 2024 - Present",
      links: ["https://utinclab.com/"],
      title: "Research Assistant",
    },
    {
      id: "e3",
      name: "Neuro Spin Compute Laboratory",
      skillIds: [
        "python",
        "bash",
        "pandas",
        "numpy",
        "matplotlib",
        "jupyter",
        "latex",
        "figma",
        "sci",
      ],
      description: "I investigated hybrid logic locking systems utilizing strain-modulated nanomagnets under Dr. Joseph S. Friedman, where I led the development of logic-locking programs through innovative applications of graph partitioning algorithms. I encrypted over 500,000 different netlists and ran them through a satisfiability solver simulation, quantifying algorithmic security and improving encryption times from 2 seconds to over 12 hours. Additionally, as a Research Assistant at the Center for Robust Speech Systems, I collaborated with NASA to analyze Human Exploration Research Analog audio recordings under Dr. John H. L. Hansen. I optimized speech audio detection inferences for more than 16 hours of audio using the open-source ESPnet framework, analyzing word error rates and signal-to-noise ratios for different audio devices with the Whisper automatic speech recognition model.",
      images: ["/images/nsclogo.png", "/images/nscposter.jpg"],
      date: "Summer 2022 - Spring 2024",
      links: ["https://personal.utdallas.edu/~joseph.friedman/"],
      title: "Research Assistant",
    },
    {
      id: "e4",
      name: "Center for Robust Speech Systems",
      skillIds: ["python", "bash"],
      description: "I analyzed Human Exploration Research Analog (HERA) audio recordings in collaboration with NASA under the mentorship of Dr. John H. L. Hansen. Using the open-source ESPnet framework, I optimized speech audio detection for over 16 hours of recorded data. I evaluated audio quality by analyzing word error rates (WER) and signal-to-noise ratios (SNR) across various recording devices using the Whisper automatic speech recognition model, enhancing the accuracy and reliability of speech-based data processing.",
      images: ["/images/HERA.jpeg", "/images/crssposter.jpg"],
      date: "Fall 2023 - Spring 2024",
      links: ["https://crss.utdallas.edu/"],
      title: "Research Assistant",
    },
    {
      id: "e5",
      name: "Collins Aerospace",
      skillIds: ["java", "velocity"],
      description: "I utilized model-based systems engineering (MBSE) design paradigms to develop a tool that automates the generation of formal engineering documents from a Cameo model for Collins Aerospace's Mission Systems projects. By eliminating manual documentation generation, I reduced document production costs by 98%, resulting in projected savings of 2.3% of the total contract—equivalent to $6.8 million—for a directly supported project. I collaborated with engineering teams to understand their documentation needs, creating tailored solutions that enhanced efficiency. I also delivered an oral presentation to senior executives in Cedar Rapids, Iowa, showcased my work in a site-wide poster presentation, and composed comprehensive user manuals while training engineers to use and extend the tool.",
      images: ["/images/collins.jpeg"],
      date: "Summer 2023",
      links: ["https://www.collinsaerospace.com/"],
      title: "Software Engineer Intern",
    },
  ],
  projects: [
    {
      id: "p1",
      name: "FiscalFootprint: Government Spending Visualizer",
      skillIds: [
        "react",
        "bash",
        "js",
        "html",
        "css",
        "ts",
        "tf",
        "aws",
        "figma",
        "docker",
      ],
      description: "For the HackTX 24-hour hackathon, I led the development of a web application that visualizes government spending data to promote financial literacy and transparency. We were able to use the USAspending.gov API to access federal spending data and display it in an interactive and user-friendly format. Unfortunately, we were unable to win the competition, but we learned a lot about web development and data visualization, and we were able to create a functional prototype.",
      images: ["/images/ff3.jpg", "/images/ff1.jpg", "/images/ff2.jpg"],
      date: "Fall 2024",
      links: ["https://github.com/rohanchugh14/hacktx2024", "https://devpost.com/software/fiscal-footprint", "https://www.youtube.com/watch?v=iWCFRetut8g&t=3s"],
      title: "",
    },
    {
      id: "p3",
      name: "Briar Ziggs: Gamer Personality Test",
      skillIds: ["react", "bash", "js", "html", "css", "ts", "docker"],
      description: "This was a playful spin on the popular Myers-Briggs personality test where me and a Rohan created a quiz to determine which League of Legends champions you would probably enjoy playing along with categorizing certain playstyles and personalities. We also created a page to display the results and share them with friends.",
      images: ["/images/bz1.png", "/images/bz2.png", "/images/bz3.png"],
      date: "Summer 2024",
      links: ["https://briarziggs.com/", "https://github.com/Alexander-N-Chin/Briar-Ziggs"],
      title: "",
    },
    {
      id: "p2",
      name: "PolyphonyPal: Sheet Music Generator",
      skillIds: [
        "python",
        "react",
        "bash",
        "js",
        "html",
        "css",
        "flask",
        "sql",
        "pg",
        "docker",
        "figma",
      ],
      description: "For my senior design project, I developed Polyphony Pal, an innovative application designed to enhance the study and practice of classical partwriting. The app analyzes partwriting sheet music, grading it and identifying errors based on established classical partwriting rules, providing users with valuable feedback for improvement. Additionally, it generates every valid composition for a given key signature and Roman numeral sequence, making it a powerful tool for both learning and creative composition. This project allowed me to combine my technical skills with a passion for music theory, resulting in a practical and user-friendly tool for musicians and educators.",
      images: [],
      date: "Spring 2024",
      links: ["https://polyphonypal.netlify.app/", "https://github.com/PolyphonyPal-HQ/polyphony-pal"],
      title: "",
    },
    {
      id: "p5",
      name: "Ready Player Credit: Gamify Financial Literacy",
      skillIds: [
        "react",
        "bash",
        "js",
        "html",
        "css",
        "ts",
        "docker",
        "express",
        "node",
        "mango",
        "figma",
      ],
      description: "During Formula Hack at UT Austin, I collaborated with a team of three to create Ready Player Credit, a gamified online banking solution that earned First Prize for Capital One's Best Financial Hack out of 40+ teams. I utilized the MERN stack and Chakra UI React Library to build a fully functional simulated credit system, mimicking state-of-the-art online banking features. To bring our vision to life, I crafted 13 custom React components, ensuring smooth functionality, engaging user interactions, and a cohesive design experience. To elevate the project, I integrated tools like Eleven Labs, which added humorous AI narrations, and PropelAuth, enabling secure single sign-on authentication. These enhancements not only boosted user engagement but also streamlined security measures. This experience showcased my ability to merge creativity with technical skills, delivering a polished, user-focused solution under tight deadlines.",
      images: ["/images/rpc1.jpg", "/images/rpc2.jpg", "/images/rpc3.jpg"],
      date: "Spring 2023",
      links: ["https://readyplayercredit.netlify.app/", "https://github.com/rohanchugh14/gamify-credit-cards", "https://devpost.com/software/ready-player-credit"],
      title: "",
    },
    {
      id: "p6",
      name: "ErgoBlink: Posture and Blink Detection",
      skillIds: ["python", "bash", "jupyter", "numpy", "pandas", "sci", "cv"],
      description: "ErgoBlink is a fully functioning application that helps mitigate computer vision syndrome and improve posture, overall helping with better human-computer interaction and improving health. It achieves this by using computer vision and machine learning algorithms to classify and detect bad posture and eye blinking patterns, as well as providing reminders for screen breaks. The bad posture classification/detection feature uses the front-facing camera on the device to capture the user's posture in real time.\nThe algorithm analyzes the posture using deep learning techniques to determine whether it falls within a range of bad postures. When a bad posture is detected, the app gives the user a gentle reminder to adjust their posture. The blink interval detection feature monitors the user's blinking patterns and alerts them if they are not blinking frequently enough. The app uses computer vision to track the user's eye movements and detect the time intervals between blinks using Eye Aspect Ratio (EAR). \nOverall, this app provides a comprehensive solution for promoting healthy screen time habits. By detecting bad postures, monitoring blinking patterns, and providing screen time reminders, the app encourages users to take care of their physical and mental health while using digital devices.",
      images: ["/images/good.png"],
      date: "Spring 2023",
      links: ["https://ergoblink.geethg.com/", "https://github.com/Alexander-N-Chin/ErgoBlink"],
      title: "",
    },
    {
      id: "p4",
      name: "Sorting Visualizer",
      skillIds: ["mips"],
      description: "For my computer arcitecture project [CS 2340], I decided to create a sorting visualizer in MIPS Assembly. The visualizer allows users to see how different sorting algorithms work in real time. The sorting algorithms I implemented were Bubble Sort, Quick Sort, and Insertion Sort.",
      images: ["/images/InsertionSortGif.gif", "/images/QuickSortGif.gif", "/images/BubbleSortGif.gif"],
      date: "Spring 2022",
      links: ["https://github.com/Alexander-N-Chin/Sorting-Visualizer"],
      title: "",
    },
    {
      id: "p7",
      name: "ResuBot: Resume Grader",
      skillIds: [
        "js",
        "css",
        "html",
        "react",
        "python",
        "bash",
        "jupyter",
        "numpy",
        "pandas",
        "sci",
        "matplotlib",
        "docker",
        "figma",
      ],
      description: "ResuBot is a tool designed to help people improve their resumes and receive job suggestions that match their qualifications and experiences. Our platform was developed by students who were eager for internships, but frustrated by the challenge of effectively showcasing their qualifications and experiences to potential employers.",
      images: ["/images/resubot.png", "/images/resubot2.png"],
      date: "Fall 2022",
      links: [
        "https://github.com/UTD-AIS-Mentorship/Resume-Grading-and-Job-Recommendation-Fall-22",
        "https://www.youtube.com/live/HAyAWdbnM7g?feature=share&t=2369",
      ],
      title: "",
    },
  ],
};
